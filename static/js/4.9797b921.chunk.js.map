{"version":3,"sources":["validation/loginFormValidationRules.js","components/BookFormUpdating.js","components/ElementList.js"],"names":["loginFormValidationRules","title","fragment","errors","loginFormValidationRulesPath","text","BookFormUpdating","id","setBooks","books","useState","changedText","setChangeText","value","onSubmit","e","preventDefault","message","alert","apiFetch","options","onChange","target","type","ElementList","length","map","book","body"],"mappings":"qGAAA,oEAAO,IAAMA,EAA2B,SAACC,EAAOC,GAC5C,IAAIC,EAAS,GAIb,OAHKF,GAAUC,IACXC,EAAOF,MAAQ,4BAEZE,GAGEC,EAA+B,SAACC,GACzC,IAAIF,EAAS,GAIb,OAHKE,IACDF,EAAOE,KAAO,yBAEXF,I,yFCuBIG,EA9BU,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,GAAIN,EAA6B,EAA7BA,MAAOO,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAAY,EAEpBC,qBAFoB,mBAElDC,EAFkD,KAErCC,EAFqC,KAkBzD,OACI,uBAAMC,MAAOF,EAAaG,SAfT,SAACC,GAElB,GADAA,EAAEC,kBACGL,EAAa,CACd,IAAMM,EAAUb,YAA6BO,GAC7C,OAAOO,MAAMD,EAAQZ,MAGzBc,YAASX,EAAUY,YAAQ,QAASnB,EAAO,KAAMU,GAAcF,EAAOF,IAQtE,UACI,uBAAOc,SANU,SAACN,GACtBH,EAAcG,EAAEO,OAAOT,QAKgBU,KAAK,SACxC,wFCEGC,UAzBK,SAAC,GAAyB,IAAvBf,EAAsB,EAAtBA,MAAOD,EAAe,EAAfA,SAE1B,OACS,OAALC,QAAK,IAALA,OAAA,EAAAA,EAAOgB,QACH,+BACKhB,EAAMiB,KAAI,SAAAC,GACP,OACI,+BACI,uBACA,+CACA,uCAAQA,EAAK1B,MAAb,OACA,uDACA,uCAAQ0B,EAAKC,KAAb,OACA,cAAC,EAAD,CAAkBrB,GAAIoB,EAAKpB,GAAIE,MAAOA,EAAOD,SAAUA,EAAUP,MAAO0B,EAAK1B,UANxE0B,EAAKpB,OAH1B,OAaE","file":"static/js/4.9797b921.chunk.js","sourcesContent":["export const loginFormValidationRules = (title, fragment) => {\r\n    let errors = []\r\n    if (!title || !fragment) {\r\n        errors.title = \"this inputs are required\"\r\n    }\r\n    return errors\r\n};\r\n\r\nexport const loginFormValidationRulesPath = (text) => {\r\n    let errors = []\r\n    if (!text) {\r\n        errors.text = \"this text is required\"\r\n    }\r\n    return errors\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { loginFormValidationRulesPath } from \"../validation/loginFormValidationRules\";\r\nimport { apiFetch } from \"../fetchApi/fetch\";\r\nimport { options } from \"../fetchApi/utilities\";\r\n\r\nconst BookFormUpdating = ({ id, title, setBooks, books }) => {\r\n\r\n    const [changedText, setChangeText] = useState();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (!changedText) {\r\n            const message = loginFormValidationRulesPath(changedText)\r\n            return alert(message.text)\r\n        }\r\n\r\n        apiFetch(setBooks, options(\"PATCH\", title, null, changedText), books, id)\r\n    };\r\n\r\n    const handleChangeText = (e) => {\r\n        setChangeText(e.target.value)\r\n    };\r\n\r\n    return (\r\n        <form value={changedText} onSubmit={handleSubmit}>\r\n            <input onChange={handleChangeText} type=\"text\" />\r\n            <button >replacing fragment of book to another fragment</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nBookFormUpdating.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n};\r\nexport default BookFormUpdating;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport BookFormUpdating from \"../components/BookFormUpdating.js\";\r\n\r\nconst ElementList = ({ books, setBooks }) => {\r\n\r\n    return (\r\n        books?.length ? (\r\n            <ul>\r\n                {books.map(book => {\r\n                    return (\r\n                        <li key={book.id}>\r\n                            <hr />\r\n                            <h1>book's title:</h1>\r\n                            <p>{`\"${book.title}\"`}</p>\r\n                            <h2>Fragment of the book:</h2>\r\n                            <p>{`\"${book.body}\"`}</p>\r\n                            <BookFormUpdating id={book.id} books={books} setBooks={setBooks} title={book.title} />\r\n                        </li>\r\n                    )\r\n                })} </ul>)\r\n            : null)\r\n\r\n};\r\n\r\nElementList.propTypes = {\r\n    books: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ElementList;"],"sourceRoot":""}