{"version":3,"sources":["components/BookFormUpdating.js","components/ElementList.js","components/BookFormAdding.js","components/ButtonDelete.js","fetchApi/fetch.js","fetchApi/utilities.js","components/List.js","validation/loginFormValidationRules.js","App.js","index.js"],"names":["BookFormUpdating","id","handleUpdateClick","title","useState","changedText","setChangeText","value","onSubmit","e","preventDefault","onChange","target","type","onClick","ElementList","books","length","newArrayBooks","map","book","index","body","BookFormAdding","handleAddClick","setTitle","fragment","setFragment","event","htmlFor","ButtonDelete","handleDeleteClick","apiFetch","url","setBooks","options","fetch","then","response","status","json","Error","data","method","booksFromData","item","concat","newBooks","console","log","catch","err","option","headers","JSON","stringify","List","useEffect","message","errors","loginFormValidationRules","alert","text","loginFormValidationRulesPath","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bb195c7.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst BookFormUpdating = ({ id, handleUpdateClick, title }) => {\r\n\r\n    const [changedText, setChangeText] = useState();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n    };\r\n\r\n    const handleChangeText = (e) => {\r\n        setChangeText(e.target.value)\r\n    };\r\n\r\n    return (\r\n        <form value={changedText} onSubmit={handleSubmit}>\r\n            <input onChange={handleChangeText} type=\"text\" />\r\n            <button onClick={() => handleUpdateClick(changedText, id, title)}>replacing fragment of book to another fragment</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default BookFormUpdating;","import React from 'react';\r\nimport BookFormUpdating from \"../components/BookFormUpdating.js\";\r\n\r\nconst ElementList = ({ books, handleUpdateClick }) => {\r\n\r\n    if (books.length) {\r\n        const newArrayBooks = books.map((book, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <hr />\r\n                    <h1>book's title:</h1>\r\n                    <p>{`\"${book.title}\"`}</p>\r\n                    <h1>Fragment of the book:</h1>\r\n                    <p>{`\"${book.body}\"`}</p>\r\n                    <BookFormUpdating handleUpdateClick={handleUpdateClick} id={index} title={book.title} />\r\n\r\n                </li>\r\n            )\r\n        });\r\n        return (\r\n            <ul>\r\n                {newArrayBooks}\r\n            </ul>\r\n        );\r\n    }\r\n    else return null\r\n};\r\n\r\nexport default ElementList;","import React, { useState } from 'react';\r\n\r\nconst BookFormAdding = ({ handleAddClick }) => {\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [fragment, setFragment] = useState('');\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n    };\r\n\r\n    const handleChangeTitle = (event) => {\r\n        setTitle(event.target.value)\r\n    };\r\n    \r\n    const handleChangeFragment = (event) => {\r\n        setFragment(event.target.value)\r\n    };\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <label htmlFor=\"title\">Books' title</label>\r\n            <input value={title} id=\"title\" type=\"text\" onChange={handleChangeTitle} />\r\n            <label htmlFor=\"fragment\">Fragment of the book</label>\r\n            <input value={fragment} id=\"fragment\" type=\"text\" onChange={handleChangeFragment} />\r\n            <button onClick={() => handleAddClick(title, fragment)} >adding a book to the list</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default BookFormAdding;","import React from 'react';\r\n\r\nconst ButtonDelete = ({ handleDeleteClick }) => {\r\n    return (\r\n        <>\r\n            <button onClick={handleDeleteClick}>delete everything and write your own list</button>\r\n            <hr />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonDelete;","export const apiFetch = (url, setBooks, options, books, id) => {\r\n\r\n    fetch(url, options)\r\n        .then(response => {\r\n            if (response.status >= 200 && response.status <= 300) return response.json();\r\n            else throw new Error(\"error in downloading data\");\r\n        })\r\n        .then(data => {\r\n            switch (options.method) {\r\n                case \"GET\":\r\n                    const booksFromData = data.map(item => {\r\n                        return ({\r\n                            title: item.title,\r\n                            body: item.body\r\n                        })\r\n                    })\r\n                    return (setBooks(booksFromData));\r\n                case \"POST\":\r\n                    return (setBooks(books.concat(data)));\r\n                case \"PATCH\":\r\n                    const newBooks = books.map((item, index) => {\r\n                        if (id === index) return item.body = data;\r\n                        return item\r\n                    })\r\n                    return (setBooks(newBooks));\r\n                case \"DELETE\":\r\n                    data = [];\r\n                    return (setBooks(data));\r\n                default:\r\n                    console.log(\"unexpected method\")\r\n            }\r\n        })\r\n        .catch((err) => console.log(err))\r\n};","export const url = ['https://jsonplaceholder.typicode.com/posts?userId=1', 'https://jsonplaceholder.typicode.com/posts/1'];\r\n\r\nexport const options = (option, title, fragment, changedText) => {\r\n    switch (option) {\r\n        case \"GET\":\r\n            return ({\r\n                method: 'GET',\r\n                body: null,\r\n                headers: {\r\n                    'Content-type': 'application/json; charset=UTF-8',\r\n                },\r\n            });\r\n        case \"POST\":\r\n            return {\r\n                method: 'POST',\r\n                body: JSON.stringify(\r\n                    {\r\n                        title: title,\r\n                        body: fragment\r\n                    }\r\n                ),\r\n                headers: {\r\n                    'Content-type': 'application/json; charset=UTF-8',\r\n                },\r\n            };\r\n        case \"PATCH\":\r\n            return {\r\n                method: 'PATCH',\r\n                body: JSON.stringify({\r\n                    body: changedText,\r\n                    title: title\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json; charset=UTF-8',\r\n                },\r\n            }\r\n        case \"DELETE\":\r\n            return (\r\n                {\r\n                    method: 'DELETE',\r\n                }\r\n            )\r\n        default:\r\n            console.log(\"unexpected option\")\r\n    };\r\n\r\n};","import React, { useEffect, useState } from 'react';\r\nimport ElementList from \"../components/ElementList\";\r\nimport BookFormAdding from \"../components/BookFormAdding\";\r\nimport ButtonDelete from \"../components/ButtonDelete\";\r\nimport { loginFormValidationRules, loginFormValidationRulesPath } from \"../validation/loginFormValidationRules\";\r\nimport { apiFetch } from \"../fetchApi/fetch\";\r\nimport { url, options } from \"../fetchApi/utilities\";\r\n\r\nconst List = () => {\r\n\r\n    const [books, setBooks] = useState([]);\r\n\r\n    useEffect(() => {\r\n        apiFetch(url[0], setBooks, options(\"GET\"))\r\n    }, []);\r\n\r\n    const handleAddClick = (title, fragment) => {\r\n        if (title && fragment) {\r\n            apiFetch(url[0], setBooks, options(\"POST\", title, fragment), books)\r\n        }\r\n        else {\r\n            const message = loginFormValidationRules(title, fragment)\r\n            return alert(`${message.title}`)\r\n        }\r\n    };\r\n\r\n    const handleUpdateClick = (changedText, id, title) => {\r\n        if (changedText) {\r\n            apiFetch(url[1], setBooks, options(\"PATCH\", title, null, changedText), books, id)\r\n        }\r\n        else {\r\n            const message = loginFormValidationRulesPath(changedText)\r\n            return alert(message.text)\r\n        }\r\n    };\r\n\r\n    const handleDeleteClick = () => {\r\n        apiFetch(url[1], setBooks, options(\"DELETE\"))\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ButtonDelete handleDeleteClick={handleDeleteClick} />\r\n            <BookFormAdding handleAddClick={handleAddClick} />\r\n            <ElementList handleUpdateClick={handleUpdateClick} books={books} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default List;","export const loginFormValidationRules = (title, fragment) => {\r\n    let errors = []\r\n    if (!title || !fragment) {\r\n        errors.title = \"this inputs are required\"\r\n    }\r\n    return errors\r\n};\r\n\r\nexport const loginFormValidationRulesPath = (text) => {\r\n    let errors = []\r\n    if (!text) {\r\n        errors.text = \"this text is required\"\r\n    }\r\n    return errors\r\n};\r\n","import List from \"../src/components/List\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>The best books of all time</h1>\n      <List />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./styles/styles.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}