{"version":3,"sources":["validation/loginFormValidationRules.js","components/BookFormUpdating.js","components/ElementList.js"],"names":["loginFormValidationRules","title","fragment","errors","loginFormValidationRulesPath","text","BookFormUpdating","id","setBooks","books","useState","changedText","setChangeText","posts","url","value","onSubmit","e","preventDefault","message","alert","apiFetch","options","onChange","target","type","ElementList","length","newArrayBooks","map","book","index","body"],"mappings":"qGAAA,oEAAO,IAAMA,EAA2B,SAACC,EAAOC,GAC5C,IAAIC,EAAS,GAIb,OAHKF,GAAUC,IACXC,EAAOF,MAAQ,4BAEZE,GAGEC,EAA+B,SAACC,GACzC,IAAIF,EAAS,GAIb,OAHKE,IACDF,EAAOE,KAAO,yBAEXF,I,yFCyBIG,EAhCU,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,GAAIN,EAA6B,EAA7BA,MAAOO,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAAY,EAEpBC,qBAFoB,mBAElDC,EAFkD,KAErCC,EAFqC,KAIhDC,EAJgD,YAIvCC,IAJuC,MAoBzD,OACI,uBAAMC,MAAOJ,EAAaK,SAfT,SAACC,GAElB,GADAA,EAAEC,kBACGP,EAAa,CACd,IAAMQ,EAAUf,YAA6BO,GAC7C,OAAOS,MAAMD,EAAQd,MAGzBgB,YAASR,EAAOL,EAAUc,YAAQ,QAASrB,EAAO,KAAMU,GAAcF,EAAOF,IAQ7E,UACI,uBAAOgB,SANU,SAACN,GACtBL,EAAcK,EAAEO,OAAOT,QAKgBU,KAAK,SACxC,wFCGGC,UA5BK,SAAC,GAAyB,IAAvBjB,EAAsB,EAAtBA,MAAOD,EAAe,EAAfA,SAE1B,GAAIC,EAAMkB,OAAQ,CACd,IAAMC,EAAgBnB,EAAMoB,KAAI,SAACC,EAAMC,GACnC,OACI,+BACI,uBACA,+CACA,uCAAQD,EAAK7B,MAAb,OACA,uDACA,uCAAQ6B,EAAKE,KAAb,OACA,cAAC,EAAD,CAAkBzB,GAAIwB,EAAOtB,MAAOA,EAAOD,SAAUA,EAAUP,MAAO6B,EAAK7B,UANtE8B,MAWjB,OACI,6BACKH,IAIR,OAAO","file":"static/js/5.bf891789.chunk.js","sourcesContent":["export const loginFormValidationRules = (title, fragment) => {\r\n    let errors = []\r\n    if (!title || !fragment) {\r\n        errors.title = \"this inputs are required\"\r\n    }\r\n    return errors\r\n};\r\n\r\nexport const loginFormValidationRulesPath = (text) => {\r\n    let errors = []\r\n    if (!text) {\r\n        errors.text = \"this text is required\"\r\n    }\r\n    return errors\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { loginFormValidationRulesPath } from \"../validation/loginFormValidationRules\";\r\nimport { apiFetch } from \"../fetchApi/fetch\";\r\nimport { url, options } from \"../fetchApi/utilities\";\r\n\r\nconst BookFormUpdating = ({ id, title, setBooks, books }) => {\r\n\r\n    const [changedText, setChangeText] = useState();\r\n\r\n    const [, posts] = url;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (!changedText) {\r\n            const message = loginFormValidationRulesPath(changedText)\r\n            return alert(message.text)\r\n        }\r\n\r\n        apiFetch(posts, setBooks, options(\"PATCH\", title, null, changedText), books, id)\r\n    };\r\n\r\n    const handleChangeText = (e) => {\r\n        setChangeText(e.target.value)\r\n    };\r\n\r\n    return (\r\n        <form value={changedText} onSubmit={handleSubmit}>\r\n            <input onChange={handleChangeText} type=\"text\" />\r\n            <button>replacing fragment of book to another fragment</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nBookFormUpdating.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n};\r\nexport default BookFormUpdating;","import React from 'react';\r\nimport BookFormUpdating from \"../components/BookFormUpdating.js\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ElementList = ({ books, setBooks }) => {\r\n\r\n    if (books.length) {\r\n        const newArrayBooks = books.map((book, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <hr />\r\n                    <h1>book's title:</h1>\r\n                    <p>{`\"${book.title}\"`}</p>\r\n                    <h1>Fragment of the book:</h1>\r\n                    <p>{`\"${book.body}\"`}</p>\r\n                    <BookFormUpdating id={index} books={books} setBooks={setBooks} title={book.title} />\r\n\r\n                </li>\r\n            )\r\n        });\r\n        return (\r\n            <ul>\r\n                {newArrayBooks}\r\n            </ul>\r\n        );\r\n    }\r\n    else return null\r\n};\r\n\r\nElementList.propTypes = {\r\n    books: PropTypes.array.isRequired,\r\n};\r\nexport default ElementList;"],"sourceRoot":""}