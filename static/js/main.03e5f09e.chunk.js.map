{"version":3,"sources":["routing/Navigation.js","fetchApi/fetch.js","fetchApi/utilities.js","components/BookFormUpdating.js","validation/loginFormValidationRules.js","components/ElementList.js","components/BookFormAdding.js","components/ButtonDelete.js","components/List.js","routing/Content.js","App.js","index.js"],"names":["Navigation","to","apiFetch","url","setBooks","options","books","id","fetch","then","response","status","json","Error","data","method","booksFromData","map","item","title","body","concat","newBooks","index","console","log","catch","err","option","fragment","changedText","headers","JSON","stringify","BookFormUpdating","useState","setChangeText","posts","value","onSubmit","e","preventDefault","message","text","errors","loginFormValidationRulesPath","alert","onChange","target","type","ElementList","length","newArrayBooks","book","BookFormAdding","setTitle","setFragment","users","event","loginFormValidationRules","htmlFor","ButtonDelete","onClick","List","useEffect","path","Content","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03e5f09e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <ul>\r\n            <li>\r\n                <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/listBooks\">A list of books</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/addBook\">Addng a book to the list</Link>\r\n            </li>\r\n        </ul>\r\n\r\n    );\r\n}\r\n\r\nexport default Navigation;","export const apiFetch = (url, setBooks, options, books, id) => {\r\n\r\n    fetch(url, options)\r\n        .then(response => {\r\n            if (response.status >= 200 && response.status <= 300) return response.json();\r\n            else throw new Error(\"error in downloading data\");\r\n        })\r\n        .then(data => {\r\n            switch (options.method) {\r\n                case \"GET\":\r\n                    const booksFromData = data.map(item => {\r\n                        return ({\r\n                            title: item.title,\r\n                            body: item.body\r\n                        })\r\n                    })\r\n                    return (setBooks(booksFromData));\r\n                case \"POST\":\r\n                    return (setBooks(books.concat(data)));\r\n                case \"PATCH\":\r\n                    const newBooks = books.map((item, index) => {\r\n                        if (id === index) return item.body = data;\r\n                        return item\r\n                    })\r\n                    return (setBooks(newBooks));\r\n                case \"DELETE\":\r\n                    data = [];\r\n                    return (setBooks(data));\r\n                default:\r\n                    console.log(\"unexpected method\")\r\n            }\r\n        })\r\n        .catch((err) => console.log(err))\r\n};","export const url = ['https://jsonplaceholder.typicode.com/posts?userId=1', 'https://jsonplaceholder.typicode.com/posts/1'];\r\n\r\nexport const options = (option, title, fragment, changedText) => {\r\n    switch (option) {\r\n        case \"GET\":\r\n            return ({\r\n                method: 'GET',\r\n                body: null,\r\n                headers: {\r\n                    'Content-type': 'application/json; charset=UTF-8',\r\n                },\r\n            });\r\n        case \"POST\":\r\n            return {\r\n                method: 'POST',\r\n                body: JSON.stringify(\r\n                    {\r\n                        title: title,\r\n                        body: fragment\r\n                    }\r\n                ),\r\n                headers: {\r\n                    'Content-type': 'application/json; charset=UTF-8',\r\n                },\r\n            };\r\n        case \"PATCH\":\r\n            return {\r\n                method: 'PATCH',\r\n                body: JSON.stringify({\r\n                    body: changedText,\r\n                    title: title\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json; charset=UTF-8',\r\n                },\r\n            }\r\n        case \"DELETE\":\r\n            return (\r\n                {\r\n                    method: 'DELETE',\r\n                }\r\n            )\r\n        default:\r\n            console.log(\"unexpected option\")\r\n    };\r\n\r\n};","import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { loginFormValidationRulesPath } from \"../validation/loginFormValidationRules\";\r\nimport { apiFetch } from \"../fetchApi/fetch\";\r\nimport { url, options } from \"../fetchApi/utilities\";\r\n\r\nconst BookFormUpdating = ({ id, title, setBooks, books }) => {\r\n\r\n    const [changedText, setChangeText] = useState();\r\n\r\n    const [, posts] = url;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (!changedText) {\r\n            const message = loginFormValidationRulesPath(changedText)\r\n            return alert(message.text)\r\n        }\r\n\r\n        apiFetch(posts, setBooks, options(\"PATCH\", title, null, changedText), books, id)\r\n    };\r\n\r\n    const handleChangeText = (e) => {\r\n        setChangeText(e.target.value)\r\n    };\r\n\r\n    return (\r\n        <form value={changedText} onSubmit={handleSubmit}>\r\n            <input onChange={handleChangeText} type=\"text\" />\r\n            <button>replacing fragment of book to another fragment</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nBookFormUpdating.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n};\r\nexport default BookFormUpdating;","export const loginFormValidationRules = (title, fragment) => {\r\n    let errors = []\r\n    if (!title || !fragment) {\r\n        errors.title = \"this inputs are required\"\r\n    }\r\n    return errors\r\n};\r\n\r\nexport const loginFormValidationRulesPath = (text) => {\r\n    let errors = []\r\n    if (!text) {\r\n        errors.text = \"this text is required\"\r\n    }\r\n    return errors\r\n};\r\n","import React from 'react';\r\nimport BookFormUpdating from \"../components/BookFormUpdating.js\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ElementList = ({ books, setBooks }) => {\r\n\r\n    if (books.length) {\r\n        const newArrayBooks = books.map((book, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <hr />\r\n                    <h1>book's title:</h1>\r\n                    <p>{`\"${book.title}\"`}</p>\r\n                    <h1>Fragment of the book:</h1>\r\n                    <p>{`\"${book.body}\"`}</p>\r\n                    <BookFormUpdating id={index} books={books} setBooks={setBooks} title={book.title} />\r\n\r\n                </li>\r\n            )\r\n        });\r\n        return (\r\n            <ul>\r\n                {newArrayBooks}\r\n            </ul>\r\n        );\r\n    }\r\n    else return null\r\n};\r\n\r\nElementList.propTypes = {\r\n    books: PropTypes.array.isRequired,\r\n};\r\nexport default ElementList;","import React, { useState } from 'react';\r\nimport { url, options } from \"../fetchApi/utilities\";\r\nimport { loginFormValidationRules } from \"../validation/loginFormValidationRules\";\r\nimport { apiFetch } from \"../fetchApi/fetch\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BookFormAdding = ({ books, setBooks }) => {\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [fragment, setFragment] = useState('');\r\n\r\n    const [users] = url;\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if (!title && !fragment) {\r\n            const message = loginFormValidationRules(title, fragment)\r\n            return alert(`${message.title}`)\r\n        };\r\n\r\n        apiFetch(users, setBooks, options(\"POST\", title, fragment), books)\r\n\r\n    };\r\n\r\n    const handleChangeTitle = (event) => {\r\n        setTitle(event.target.value)\r\n    };\r\n\r\n    const handleChangeFragment = (event) => {\r\n        setFragment(event.target.value)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"title\">Books' title</label>\r\n                <input value={title} id=\"title\" type=\"text\" onChange={handleChangeTitle} />\r\n                <label htmlFor=\"fragment\">Fragment of the book</label>\r\n                <input value={fragment} id=\"fragment\" type=\"text\" onChange={handleChangeFragment} />\r\n                <button>adding a book to the list</button>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nBookFormAdding.propTypes = {\r\n    books: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default BookFormAdding;","import React from 'react';\r\nimport { url, options } from \"../fetchApi/utilities\";\r\nimport { apiFetch } from \"../fetchApi/fetch\";\r\n\r\nconst ButtonDelete = ({ setBooks }) => {\r\n\r\n    const [, posts] = url;\r\n\r\n    const handleDeleteClick = () => {\r\n        apiFetch(posts, setBooks, options(\"DELETE\"))\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <button onClick={handleDeleteClick}>delete everything and write your own list</button>\r\n            <hr />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonDelete;","import React, { useEffect, useState } from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport ElementList from \"../components/ElementList\";\r\nimport BookFormAdding from \"../components/BookFormAdding\";\r\nimport ButtonDelete from \"../components/ButtonDelete\";\r\nimport { apiFetch } from \"../fetchApi/fetch\";\r\nimport { url, options } from \"../fetchApi/utilities\";\r\n\r\nconst List = () => {\r\n\r\n    const [books, setBooks] = useState([]);\r\n    const [users,] = url;\r\n\r\n    useEffect(() => {\r\n        apiFetch(users, setBooks, options(\"GET\"))\r\n    }, [users]);\r\n\r\n    return (\r\n        <div>\r\n            <ButtonDelete setBooks={setBooks} />\r\n            <Switch>\r\n                <Route path=\"/listBooks\">\r\n                    <ElementList setBooks={setBooks} books={books} />\r\n                </Route>\r\n                <Route path=\"/addBook\">\r\n                    <BookFormAdding setBooks={setBooks} books={books} />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default List;","import React from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport List from \"../components/List\";\r\n\r\nconst Content = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\">\r\n        <List />\r\n      </Route>\r\n    </Switch >\r\n  );\r\n}\r\n\r\nexport default Content;","import React from 'react';\nimport Navigation from \"./routing/Navigation\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Content from \"./routing/Content\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <h1>The best books of all time</h1>\n        <Navigation />\n        <Content />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./styles/styles.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}