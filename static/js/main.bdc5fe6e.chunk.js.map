{"version":3,"sources":["components/ButtonPathBook.js","components/ElementList.js","components/ButtonAddBook.js","components/ButtonDelete.js","fetchApi/fetch.js","fetchApi/utilities.js","components/List.js","validation/loginFormValidationRules.js","App.js","index.js"],"names":["ButtonPathBook","id","click","title","useState","changedText","setChangeText","value","onChange","e","target","type","onSubmit","preventDefault","onClick","ElementList","books","length","newArrayBooks","map","book","index","body","ButtonAddBook","setTitle","fragment","setFragment","htmlFor","ButtonDelete","apiFetch","url","setBooks","options","fetch","then","response","status","json","Error","data","method","booksFromData","item","concat","newBooks","console","log","catch","err","option","headers","JSON","stringify","List","useEffect","message","errors","loginFormValidationRules","alert","text","loginFormValidationRulesPath","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLAUeA,EATQ,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAAY,EACRC,qBADQ,mBACtCC,EADsC,KACzBC,EADyB,KAE7C,OACI,uBAAMC,MAAOF,EAAaG,SAAU,SAACC,GAAD,OAAOH,EAAcG,EAAEC,OAAOH,QAAQI,KAAK,SAASC,SAAU,SAACH,GAAD,OAAOA,EAAEI,kBAA3G,UACI,uBAAOF,KAAK,SACZ,wBAAQG,QAAS,kBAAMZ,EAAMG,EAAaJ,EAAIE,IAA9C,gECoBGY,EAxBK,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOd,EAAY,EAAZA,MAC1B,GAAIc,EAAMC,OAAQ,CACd,IAAMC,EAAgBF,EAAMG,KAAI,SAACC,EAAMC,GACnC,OACI,+BACI,uBACA,+CACA,uCAAQD,EAAKjB,MAAb,OACA,uDACA,uCAAQiB,EAAKE,KAAb,OACA,cAAC,EAAD,CAAgBpB,MAAOA,EAAOD,GAAIoB,EAAOlB,MAAOiB,EAAKjB,UANhDkB,MAWjB,OACI,6BACKH,IAIR,OAAO,MCNDK,EAhBO,SAAC,GAAe,IAAbrB,EAAY,EAAZA,MAAY,EAEXE,mBAAS,IAFE,mBAE9BD,EAF8B,KAEvBqB,EAFuB,OAGLpB,mBAAS,IAHJ,mBAG9BqB,EAH8B,KAGpBC,EAHoB,KAKjC,OACI,uBAAMf,KAAK,SAASC,SAAU,SAACH,GAAD,OAAKA,EAAEI,kBAArC,UACI,uBAAOc,QAAQ,QAAf,0BACA,uBAAOpB,MAAOJ,EAAOF,GAAG,QAAQU,KAAK,OAAOH,SAAU,SAACC,GAAD,OAAMe,EAASf,EAAEC,OAAOH,UAC9E,uBAAOoB,QAAQ,WAAf,kCACA,uBAAOpB,MAAOkB,EAAUxB,GAAG,WAAWU,KAAK,OAAMH,SAAU,SAACC,GAAD,OAAMiB,EAAYjB,EAAEC,OAAOH,UAC1F,wBAAQO,QAAS,kBAAIZ,EAAMC,EAAOsB,IAAlC,2CCFOG,EARM,SAAC,GAAa,IAAZ1B,EAAW,EAAXA,MACnB,OACI,qCACA,wBAAQY,QAASZ,EAAjB,uDACA,2BCNK2B,EAAW,SAACC,EAAKC,EAAUC,EAAShB,EAAOf,GAEpDgC,MAAMH,EAAKE,GACNE,MAAK,SAAAC,GACF,GAAIA,EAASC,QAAU,KAAOD,EAASC,QAAU,IAAK,OAAOD,EAASE,OACjE,MAAM,IAAIC,MAAM,gCAExBJ,MAAK,SAAAK,GACF,OAAQP,EAAQQ,QACZ,IAAK,MACD,IAAMC,EAAgBF,EAAKpB,KAAI,SAAAuB,GAC3B,MAAQ,CACJvC,MAAOuC,EAAKvC,MACZmB,KAAMoB,EAAKpB,SAGnB,OAAQS,EAASU,GACrB,IAAK,OACD,OAAQV,EAASf,EAAM2B,OAAOJ,IAClC,IAAK,QACD,IAAMK,EAAW5B,EAAMG,KAAI,SAACuB,EAAMrB,GAC9B,OAAIpB,IAAOoB,EAAcqB,EAAKpB,KAAOiB,EAC9BG,KAEX,OAAQX,EAASa,GACrB,IAAK,SAED,OAAQb,EADRQ,EAAO,IAEX,QACIM,QAAQC,IAAI,yBAGvBC,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,OChCvBlB,EAAM,CAAC,sDAAuD,gDAE9DE,EAAU,SAACiB,EAAQ9C,EAAOsB,EAAUpB,GAC7C,OAAQ4C,GACJ,IAAK,MACD,MAAQ,CACJT,OAAQ,MACRlB,KAAM,KACN4B,QAAS,CACL,eAAgB,oCAG5B,IAAK,OACD,MAAO,CACHV,OAAQ,OACRlB,KAAM6B,KAAKC,UACP,CACIjD,MAAOA,EACPmB,KAAMG,IAGdyB,QAAS,CACL,eAAgB,oCAG5B,IAAK,QACD,MAAO,CACHV,OAAQ,QACRlB,KAAM6B,KAAKC,UAAU,CACjB9B,KAAMjB,EACNF,MAAOA,IAEX+C,QAAS,CACL,eAAgB,oCAG5B,IAAK,SACD,MACI,CACIV,OAAQ,UAGpB,QACIK,QAAQC,IAAI,uBCATO,EApCF,WAAO,IAAD,EACWjD,mBAAS,IADpB,mBACRY,EADQ,KACDe,EADC,KAEfuB,qBAAU,WACNzB,EAASC,EAAI,GAAIC,EAAUC,EAAQ,UACpC,IAwBH,OACI,gCACI,cAAC,EAAD,CAAc9B,MANI,WACtB2B,EAASC,EAAI,GAAIC,EAAUC,EAAQ,cAM/B,cAAC,EAAD,CAAe9B,MAzBC,SAACC,EAAOsB,GAC5B,IAAItB,IAASsB,EAGR,CACD,IAAM8B,EClBsB,SAACpD,EAAOsB,GAC5C,IAAI+B,EAAS,GAIb,OAHKrD,GAAUsB,IACX+B,EAAOrD,MAAQ,4BAEZqD,EDaiBC,CAAyBtD,EAAOsB,GAChD,OAAOiC,MAAM,GAAD,OAAIH,EAAQpD,QAJxB0B,EAASC,EAAI,GAAIC,EAAUC,EAAQ,OAAQ7B,EAAOsB,GAAWT,MAwB7D,cAAC,EAAD,CAAad,MAjBG,SAACG,EAAaJ,EAAIE,GACtC,IAAIE,EAGC,CACD,IAAMkD,ECnB0B,SAACI,GACzC,IAAIH,EAAS,GAIb,OAHKG,IACDH,EAAOG,KAAO,yBAEXH,EDciBI,CAA6BvD,GAC7C,OAAOqD,MAAMH,EAAQI,MAJrB9B,EAASC,EAAI,GAAIC,EAAUC,EAAQ,QAAS7B,EAAO,KAAME,GAAcW,EAAOf,IAezCe,MAAOA,QE7BzC6C,MATf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,4DACA,cAAC,EAAD,Q,MCCNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bdc5fe6e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nconst ButtonPathBook = ({ id, click, title }) => {\r\n    const [changedText, setChangeText] = useState();\r\n    return (\r\n        <form value={changedText} onChange={(e) => setChangeText(e.target.value)} type=\"submit\" onSubmit={(e) => e.preventDefault()}>\r\n            <input type=\"text\" />\r\n            <button onClick={() => click(changedText, id, title)}>replacing fragment of book to another fragment</button>\r\n        </form>\r\n    );\r\n}\r\nexport default ButtonPathBook;","import React from 'react';\r\nimport ButtonPathBook from \"../components/ButtonPathBook.js\";\r\nconst ElementList = ({ books, click }) => {\r\n    if (books.length) {\r\n        const newArrayBooks = books.map((book, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <hr />\r\n                    <h1>book's title:</h1>\r\n                    <p>{`\"${book.title}\"`}</p>\r\n                    <h1>Fragment of the book:</h1>\r\n                    <p>{`\"${book.body}\"`}</p>\r\n                    <ButtonPathBook click={click} id={index} title={book.title} />\r\n\r\n                </li>\r\n            )\r\n        })\r\n        return (\r\n            <ul>\r\n                {newArrayBooks}\r\n            </ul>\r\n        );\r\n    }\r\n    else return null\r\n}\r\n\r\nexport default ElementList;","import React, { useState } from 'react';\r\nconst ButtonAddBook = ({ click }) => {\r\n\r\nconst [title, setTitle] = useState('');\r\nconst [fragment, setFragment] = useState('');\r\n\r\n    return (\r\n        <form type=\"submit\" onSubmit={(e)=>e.preventDefault()}>\r\n            <label htmlFor=\"title\">Books' title</label>\r\n            <input value={title} id=\"title\" type=\"text\" onChange={(e)=> setTitle(e.target.value)}/>\r\n            <label htmlFor=\"fragment\">Fragment of the book</label>\r\n            <input value={fragment} id=\"fragment\" type=\"text\"onChange={(e)=> setFragment(e.target.value)} />\r\n        <button onClick={()=>click(title, fragment)} >adding a book to the list</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ButtonAddBook;","import React from 'react';\r\n\r\nconst ButtonDelete = ({click}) => {\r\n    return ( \r\n        <>\r\n        <button onClick={click}>delete everything and write your own list</button>\r\n        <hr/>\r\n        </>\r\n     );\r\n} \r\nexport default ButtonDelete;","export const apiFetch = (url, setBooks, options, books, id) => {\r\n\r\n    fetch(url, options)\r\n        .then(response => {\r\n            if (response.status >= 200 && response.status <= 300) return response.json();\r\n            else throw new Error(\"error in downloading data\");\r\n        })\r\n        .then(data => {\r\n            switch (options.method) {\r\n                case \"GET\":\r\n                    const booksFromData = data.map(item => {\r\n                        return ({\r\n                            title: item.title,\r\n                            body: item.body\r\n                        })\r\n                    })\r\n                    return (setBooks(booksFromData));\r\n                case \"POST\":\r\n                    return (setBooks(books.concat(data)));\r\n                case \"PATCH\":\r\n                    const newBooks = books.map((item, index) => {\r\n                        if (id === index) return item.body = data;\r\n                        return item\r\n                    })\r\n                    return (setBooks(newBooks));\r\n                case \"DELETE\":\r\n                    data = [];\r\n                    return (setBooks(data));\r\n                default:\r\n                    console.log(\"unexpected method\")\r\n            }\r\n        })\r\n        .catch((err) => console.log(err))\r\n}","export const url = ['https://jsonplaceholder.typicode.com/posts?userId=1', 'https://jsonplaceholder.typicode.com/posts/1'];\r\n\r\nexport const options = (option, title, fragment, changedText) => {\r\n    switch (option) {\r\n        case \"GET\":\r\n            return ({\r\n                method: 'GET',\r\n                body: null,\r\n                headers: {\r\n                    'Content-type': 'application/json; charset=UTF-8',\r\n                },\r\n            });\r\n        case \"POST\":\r\n            return {\r\n                method: 'POST',\r\n                body: JSON.stringify(\r\n                    {\r\n                        title: title,\r\n                        body: fragment\r\n                    }\r\n                ),\r\n                headers: {\r\n                    'Content-type': 'application/json; charset=UTF-8',\r\n                },\r\n            };\r\n        case \"PATCH\":\r\n            return {\r\n                method: 'PATCH',\r\n                body: JSON.stringify({\r\n                    body: changedText,\r\n                    title: title\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json; charset=UTF-8',\r\n                },\r\n            }\r\n        case \"DELETE\":\r\n            return (\r\n                {\r\n                    method: 'DELETE',\r\n                }\r\n            )\r\n        default:\r\n            console.log(\"unexpected option\")\r\n    }\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport ElementList from \"../components/ElementList\";\r\nimport ButtonAddBook from \"./ButtonAddBook\";\r\nimport ButtonDelete from \"../components/ButtonDelete\";\r\nimport { loginFormValidationRules, loginFormValidationRulesPath } from \"../validation/loginFormValidationRules\";\r\nimport { apiFetch } from \"../fetchApi/fetch\";\r\nimport { url, options } from \"../fetchApi/utilities\";\r\nconst List = () => {\r\n    const [books, setBooks] = useState([]);\r\n    useEffect(() => {\r\n        apiFetch(url[0], setBooks, options(\"GET\"))\r\n    }, []);\r\n\r\n    const handleClickPost = (title, fragment) => {\r\n        if (title && fragment) {\r\n            apiFetch(url[0], setBooks, options(\"POST\", title, fragment), books)\r\n        }\r\n        else {\r\n            const message = loginFormValidationRules(title, fragment)\r\n            return alert(`${message.title}`)\r\n        }\r\n    }\r\n    const handleClickPath = (changedText, id, title) => {\r\n        if (changedText) {\r\n            apiFetch(url[1], setBooks, options(\"PATCH\", title, null, changedText), books, id)\r\n        }\r\n        else {\r\n            const message = loginFormValidationRulesPath(changedText)\r\n            return alert(message.text)\r\n        }\r\n    }\r\n    const handleClickDelete = () => {\r\n        apiFetch(url[1], setBooks, options(\"DELETE\"))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ButtonDelete click={handleClickDelete} />\r\n            <ButtonAddBook click={handleClickPost} />\r\n            <ElementList click={handleClickPath} books={books} />\r\n        </div>\r\n    );\r\n}\r\nexport default List;","export const loginFormValidationRules = (title, fragment) => {\r\n    let errors = []\r\n    if (!title || !fragment) {\r\n        errors.title = \"this inputs are required\"\r\n    }\r\n    return errors\r\n}\r\n\r\nexport const loginFormValidationRulesPath = (text) => {\r\n    let errors = []\r\n    if (!text) {\r\n        errors.text = \"this text is required\"\r\n    }\r\n    return errors\r\n}\r\n","import List from \"../src/components/List\"\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>The best books of all time</h1> \n      <List/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./styles/styles.scss\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}