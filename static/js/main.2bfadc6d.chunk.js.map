{"version":3,"sources":["context/booksList/bookContext.js","layout/Content.js","context/types.js","context/booksList/bookReducer.js","fetchApi/utilities.js","context/booksList/BooksState.js","validation/loginFormValidationRules.js","App.js","index.js"],"names":["booksContext","createContext","Navigation","lazy","ElementList","BookFormAdding","ButtonDelete","Content","fallback","exact","path","component","GET_BOOKS","POST_BOOKS","PATCH_BOOKS","DELETE_BOOKS","CHANGE_TITLE","CHANGE_FRAGMENT","UPDATE_BODY","bookReducer","state","action","type","changedText","payload","fragment","title","books","options","option","method","body","headers","JSON","stringify","console","log","BookState","props","useReducer","BookReducer","dispatch","apiFetch","id","users","url","fetch","then","response","ok","json","Error","data","newBooks","map","item","catch","err","useEffect","Provider","value","handleChangeTitle","event","target","handleChangeFragment","handleSubmitUpdating","e","preventDefault","message","text","errors","loginFormValidationRulesPatch","alert","handleSubmitAdding","loginFormValidationRules","handleChangeText","handleDeleteClick","children","App","BooksState","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bfadc6d.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\nconst booksContext = createContext();\r\nexport default booksContext;\r\n","import React, { lazy, Suspense } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nconst Navigation = lazy(() => import(\"../layout/Navigation\"));\r\nconst ElementList = lazy(() => import(\"../components/ElementList\"));\r\nconst BookFormAdding = lazy(() => import(\"../components/BookFormAdding.js\"));\r\nconst ButtonDelete = lazy(() => import(\"../components/ButtonDelete\"));\r\n\r\nconst Content = () => {\r\n  return (\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <ButtonDelete />\r\n      <Navigation />\r\n      <Switch>\r\n        <Route exact path=\"/\" />\r\n        <Route path=\"/listBooks\" component={ElementList} />\r\n        <Route path=\"/addBook\" component={BookFormAdding}>\r\n        </Route>\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default Content;","export const GET_BOOKS = \"GET_BOOKS\";\r\nexport const POST_BOOKS = \"POST_BOOKS\";\r\nexport const PATCH_BOOKS = \"PATCH_BOOKS\";\r\nexport const DELETE_BOOKS = \"DELETE_BOOKS\";\r\nexport const SET_BOOKS = \"SET_BOOKS\";\r\nexport const CHANGE_TITLE = \"CHANGE_TITLE\";\r\nexport const CHANGE_FRAGMENT = \"CHANGE_FRAGMENT\";\r\nexport const UPDATE_BODY = \"UPDATE_BODY\";\r\n\r\n\r\n","import { SET_BOOKS, GET_BOOKS, POST_BOOKS, PATCH_BOOKS, DELETE_BOOKS, CHANGE_TITLE, CHANGE_FRAGMENT, UPDATE_BODY } from \"../types\";\r\n\r\nconst bookReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_BODY:\r\n            return {\r\n                ...state,\r\n                changedText: action.payload,\r\n            };\r\n\r\n        case CHANGE_FRAGMENT:\r\n            return {\r\n                ...state,\r\n                fragment: action.payload\r\n            };\r\n\r\n        case CHANGE_TITLE:\r\n            return {\r\n                ...state,\r\n                title: action.payload\r\n            };\r\n\r\n        case SET_BOOKS:\r\n            return {\r\n                ...state,\r\n                books: action.payload\r\n            };\r\n\r\n        case GET_BOOKS:\r\n            return {\r\n                ...state,\r\n                books: action.payload\r\n            };\r\n\r\n        case POST_BOOKS:\r\n            return {\r\n                ...state,\r\n                books: action.payload\r\n            };\r\n\r\n        case PATCH_BOOKS:\r\n            return {\r\n                ...state,\r\n                books: action.payload\r\n            };\r\n\r\n        case DELETE_BOOKS:\r\n            return {\r\n                ...state,\r\n                books: action.payload\r\n            };\r\n\r\n        default:\r\n            return state\r\n    };\r\n};\r\n\r\nexport default bookReducer;","export const options = (option, title, fragment, changedText) => {\r\n    switch (option) {\r\n\r\n        case \"GET\":\r\n            return ({\r\n                method: 'GET',\r\n                body: null,\r\n                headers: {\r\n                    'Content-type': 'application/json; charset=UTF-8',\r\n                },\r\n            });\r\n\r\n        case \"POST\":\r\n            return {\r\n                method: 'POST',\r\n                body: JSON.stringify(\r\n                    {\r\n                        title: title,\r\n                        body: fragment,\r\n                    }\r\n                ),\r\n                headers: {\r\n                    'Content-type': 'application/json; charset=UTF-8',\r\n                },\r\n            };\r\n\r\n        case \"PATCH\":\r\n            return {\r\n                method: 'PATCH',\r\n                body: JSON.stringify({\r\n                    body: changedText,\r\n                    title: title,\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json; charset=UTF-8',\r\n                },\r\n            };\r\n\r\n        case \"DELETE\":\r\n            return { method: 'DELETE' };\r\n\r\n        default:\r\n            console.log(\"unexpected option\")\r\n    };\r\n};","import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { GET_BOOKS, POST_BOOKS, PATCH_BOOKS, DELETE_BOOKS, CHANGE_TITLE, CHANGE_FRAGMENT, UPDATE_BODY } from \"../types\";\r\n\r\nimport BookReducer from \"../booksList/bookReducer\";\r\nimport BookContext from \"../booksList/bookContext\";\r\n\r\nimport { loginFormValidationRules, loginFormValidationRulesPatch } from \"../../validation/loginFormValidationRules\";\r\nimport { options } from \"../../fetchApi/utilities\";\r\n\r\nconst BookState = props => {\r\n\r\n    const initialState = {\r\n        books: [],\r\n        title: '',\r\n        fragment: '',\r\n        changedText: null\r\n    };\r\n    const [state, dispatch] = useReducer(BookReducer, initialState);\r\n\r\n    const apiFetch = (options, id) => {\r\n\r\n        const users = ((options.method === \"PATCH\") || (options.method === \"DELETE\")) ? \"/1?userId=1\" : \"?userId=1\"\r\n\r\n        const url = `https://jsonplaceholder.typicode.com/posts${users}`\r\n\r\n        fetch(url, options)\r\n            .then(response => {\r\n                if (response.ok) return response.json();\r\n                else throw new Error(\"error in downloading data\");\r\n            })\r\n            .then(data => {\r\n                switch (options.method) {\r\n\r\n                    case \"GET\":\r\n                        return (dispatch({ type: GET_BOOKS, payload: data }));\r\n\r\n                    case \"POST\":\r\n                        return dispatch({ type: POST_BOOKS, payload: [...state.books, data] });\r\n\r\n                    case \"PATCH\":\r\n                        const newBooks = state.books.map(item => {\r\n                            if (item.id === id) {\r\n                                item.body = data.body;\r\n                                data.id = id;\r\n                            };\r\n                            return (item);\r\n                        });\r\n                        return (dispatch({ type: PATCH_BOOKS, payload: newBooks }));\r\n\r\n                    case \"DELETE\":\r\n                        return (dispatch({ type: DELETE_BOOKS, payload: [] }));\r\n\r\n                    default:\r\n                        return console.log(\"unexpected method\");\r\n                }\r\n            })\r\n            .catch((err) => console.log(err))\r\n    };\r\n\r\n    //App.js\r\n    useEffect(() => {\r\n        apiFetch(options(\"GET\"));\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n    //BookFormAdding.js\r\n    const handleSubmitAdding = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        state.books.map(item => item.id += 1);\r\n\r\n        if (!state.title && !state.fragment) {\r\n            const message = loginFormValidationRules(state.title, state.fragment);\r\n            return alert(`${message.title}`);\r\n        };\r\n\r\n        apiFetch(options(\"POST\", state.title, state.fragment));\r\n    };\r\n\r\n    const handleChangeTitle = (event) => {\r\n        dispatch({ type: CHANGE_TITLE, payload: event.target.value });\r\n    };\r\n\r\n    const handleChangeFragment = (event) => {\r\n        dispatch({ type: CHANGE_FRAGMENT, payload: event.target.value });\r\n    };\r\n\r\n    //BookFormUpdating.js\r\n\r\n    const handleSubmitUpdating = (id, e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if (state.changedText === null) {\r\n            const message = loginFormValidationRulesPatch(state.changedText);\r\n            return alert(message.text);\r\n        };\r\n\r\n        dispatch({\r\n            type: UPDATE_BODY,\r\n            payload: null,\r\n\r\n        });\r\n\r\n        apiFetch(options(\"PATCH\", state.title, null, state.changedText), id);\r\n\r\n    };\r\n\r\n    const handleChangeText = (e) => {\r\n\r\n        dispatch({\r\n            type: UPDATE_BODY,\r\n            payload: e.target.value,\r\n\r\n        });\r\n\r\n    };\r\n\r\n    //ButtonDelete.js\r\n    const handleDeleteClick = () => {\r\n        apiFetch(options(\"DELETE\"));\r\n    };\r\n\r\n    return (\r\n        <BookContext.Provider value={{ books: state.books, title: state.title, fragment: state.fragment, handleChangeTitle, handleChangeFragment, handleSubmitUpdating, handleSubmitAdding, handleChangeText, handleDeleteClick }}>\r\n            {props.children}\r\n        </BookContext.Provider>\r\n    );\r\n};\r\n\r\nexport default BookState;","export const loginFormValidationRules = (title, fragment) => {\r\n    let errors = []\r\n    if (!title || !fragment) {\r\n        errors.title = \"this inputs are required\"\r\n    }\r\n    return errors\r\n};\r\n\r\nexport const loginFormValidationRulesPatch = (text) => {\r\n    let errors = []\r\n    if (!text) {\r\n        errors.text = \"this text is required\"\r\n    }\r\n    return errors\r\n};\r\n","import React from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport Content from \"./layout/Content\";\n\nimport BooksState from \"./context/booksList/BooksState\";\n\nfunction App() {\n\n  return (\n    <BooksState>\n        <Router>\n          <div className=\"App\">\n            <h1>The best books of all time</h1>\n            <Content />\n          </div>\n        </Router>\n    </BooksState>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./styles/styles.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}